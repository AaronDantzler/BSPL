# -*- coding: utf-8 -*-
"""HurricaneAnalysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BXcoA-5rpaGDqr6_4wSiN5M63mtlIaX9

Import Data
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

df_combined = pd.read_csv('df_combined (1, Final).csv')

df_combined.drop(df_combined.columns[0], axis=1, inplace=True)

df_combined

from google.colab import files
uploaded = files.upload()

import pandas as pd

df_drop = pd.read_csv('df_drop (9) (1, Final).csv')

df_drop.drop(df_drop.columns[0], axis=1, inplace=True)

df_drop

"""Split into different news stations"""

df_combined_cnn = df_combined[df_combined.CNN == 1]
df_combined_msnbc = df_combined[df_combined.MSNBC == 1]
df_combined_fox = df_combined[df_combined.FOX == 1]

df_combined_cnn['Weighted Score'].describe()

df_combined_msnbc['Weighted Score'].describe()

df_combined_fox['Weighted Score'].describe()

"""Split into different news stations"""

df_drop_cnn = df_drop[df_drop.CNN == 1]
df_drop_msnbc = df_drop[df_drop.MSNBC == 1]
df_drop_fox = df_drop[df_drop.FOX == 1]

df_drop_cnn['Weighted Score'].describe()

df_drop_msnbc['Weighted Score'].describe()

df_drop_fox['Weighted Score'].describe()

df_drop_cnn['Weighted Sentiment Score'].describe()

df_drop_msnbc['Weighted Sentiment Score'].describe()

df_drop_fox['Weighted Sentiment Score'].describe()

df_drop_cnn['Weighted Commitment Score'].describe()

df_drop_msnbc['Weighted Commitment Score'].describe()

df_drop_fox['Weighted Commitment Score'].describe()

df_drop_cnn['Weighted Spec Score'].describe()

df_drop_msnbc['Weighted Spec Score'].describe()

df_drop_fox['Weighted Spec Score'].describe()

# pip
!pip install statsmodels
# conda
!conda install -c conda-forge statsmodels

import statsmodels.api as sm

"""Run a regression of Weighted Score on dummy variables for the news stations"""

y = df_combined['Weighted Score']
X = df_combined[['CNN', 'MSNBC']]
X = sm.add_constant(X)
lm = sm.OLS(y, X).fit()
lm.summary()

y = df_drop['Weighted Score']
X = df_drop[['CNN', 'MSNBC']]
X = sm.add_constant(X)
lm = sm.OLS(y, X).fit()
lm.summary()

y = df_drop['Weighted Sentiment Score']
X = df_drop[['CNN', 'MSNBC']]
X = sm.add_constant(X)
lm = sm.OLS(y, X).fit()
lm.summary()

y = df_drop['Weighted Commitment Score']
X = df_drop[['CNN', 'MSNBC']]
X = sm.add_constant(X)
lm = sm.OLS(y, X).fit()
lm.summary()

y = df_drop['Weighted Spec Score']
X = df_drop[['CNN', 'MSNBC']]
X = sm.add_constant(X)
lm = sm.OLS(y, X).fit()
lm.summary()